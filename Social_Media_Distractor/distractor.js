const fs = require("fs");
const {google} = require("googleapis");
const nodemailer = require("nodemailer");


// Add your current password to newPass File.
// Change Username
// Change Email

// Uncomment this 
//const CLIENT_ID = // Use Your Client Id
//const CLIENT_SECRET = // Use Your Client Secret
//const REDIRECT_URI = 'https://developers.google.com/oauthplayground'
//const REFRESH_TOKEN = // Use Your Refresh Token

const oAuth2Client = new google.auth.OAuth2(CLIENT_ID,CLIENT_SECRET,REDIRECT_URI)
oAuth2Client.setCredentials({refresh_token:REFRESH_TOKEN})




let day = 5; // Day will be generated by Date module :) XD

// Send Mail
async function sendMail(){
  try {
    const accessToken = await oAuth2Client.getAccessToken()
    const transport = nodemailer.createTransport({
      service:'gmail',
      auth:{
        type:'OAuth2',
        user:'youremail@gmail.com',
        clientId:CLIENT_ID,
        clientSecret:CLIENT_SECRET,
        refreshToken:REFRESH_TOKEN,
        accessToken:accessToken
      }
    })
    const mailOptions = {
      from:'youremail@gmail.com',
      to:'youremail@gmail.com',
      subject:'Password ðŸ”‘',
      text:fs.readFileSync('pass.txt')
    };

    const result = await transport.sendMail(mailOptions)
    return result;
  } catch (error) {
    return error;
  }
}


// Monday - Change Password

if(day==0){
  String.prototype.pick = function(min, max) {
    var n, chars = '';
  
    if (typeof max === 'undefined') {
        n = min;
    } else {
        n = min + Math.floor(Math.random() * (max - min + 1));
    }
  
    for (var i = 0; i < n; i++) {
        chars += this.charAt(Math.floor(Math.random() * this.length));
    }
  
    return chars;
  };
  
  String.prototype.shuffle = function() {
    var array = this.split('');
    var tmp, current, top = array.length;
  
    if (top) while (--top) {
        current = Math.floor(Math.random() * (top + 1));
        tmp = array[current];
        array[current] = array[top];
        array[top] = tmp;
    }
  
    return array.join('');
  };
  
  
  var specials = '!@#$%^&*()_+{}';
  var lowercase = 'abcdefghijklmnopqrstuvwxyz';
  var uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  var numbers = '0123456789';
  
  var all = specials + lowercase + uppercase + numbers;
  
  var ePass = '';
  ePass += specials.pick(1);
  ePass += lowercase.pick(1);
  ePass += uppercase.pick(1);
  ePass += all.pick(3, 10);
  ePass = ePass.shuffle();
  
  

  let password = ""+fs.readFileSync("newPass.txt")  // current password
  fs.writeFileSync("pass.txt",ePass); // change hoga yeh
  let newPassword = ""+fs.readFileSync("pass.txt")
  
  
  const puppeteer = require('puppeteer');
  let page;
  const browserOpenPromise = puppeteer.launch({headless:false});
  
  browserOpenPromise.then((browser)=>{ 
  
    const pageArrayPromise = browser.pages();
    return pageArrayPromise;
  }).then((browserPages)=>{
    page = browserPages[0];
    const gotoPromise = page.goto("https://www.instagram.com");
    return gotoPromise;
  })
  .then(()=>{
    const waitUserPageElementPromise = page.waitForSelector(".f0n8F input[type='text']",{visible:true});
    return waitUserPageElementPromise;
  }).then(()=>{
    // Add Your Username before running script
    const userNamePromise = page.type(".f0n8F input[type='text']",'Your_UserNameHere');
    return userNamePromise;
  })
  .then(()=>{
    const waitUserPageElementPromise = page.waitForSelector(".f0n8F input[type='password']",{visible:true});
    return waitUserPageElementPromise;
  }).then(()=>{
    const userPassPromise = page.type(".f0n8F input[type='password']",password); // HIGH VURN
    return userPassPromise;
  })
  .then(()=>{
    const loginPromise = page.click(".sqdOP.L3NKy.y3zKF");
    return loginPromise;
  })
  .then(()=>{
    const waitLogin = page.waitForSelector("._6q-tv",{visible:true});
    return waitLogin;
  })
  .then(()=>{
    const gotoPromise2 = page.goto("https://www.instagram.com/accounts/password/change/");
    return gotoPromise2;
  })
  .then(()=>{
    const waitOldLogin = page.waitForSelector("#cppOldPassword",{visible:true});
    return waitOldLogin;
  })
  .then(()=>{
    const userOldPass = page.type("#cppOldPassword",password); // HIGH VURN
    return userOldPass;
  })
  .then(()=>{
    const userNewPass = page.type("#cppNewPassword",newPassword); // HIGH VURN
    return userNewPass;
  })
  .then(()=>{
    const userCNewPass = page.type("#cppConfirmPassword",newPassword); // HIGH VURN
    return userCNewPass;
  })
  .then(()=>{
    const finalSubmit = page.click(".sqdOP.L3NKy.y3zKF");
    return finalSubmit;
  })
  .then(()=>{
    fs.writeFileSync("newPass.txt",newPassword);
  })
  .catch((err)=>{
    console.log(err);
  });
}


// Friday - Send Mail
else if(day == 5){
  sendMail().then((result)=>console.log('Email Sent...',result)).catch((err)=>console.log(err.message))
}

else{
  console.log("Not Today");
}
